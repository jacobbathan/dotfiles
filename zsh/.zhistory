ga
clear
ls
pwd
cd ../..
ls
cd .config/zsh/external
ls
exit
cp man
ls
cd external
ls
ls
pwd
pwd
clear
nvim prompt_purification_setup
clear
nvim
clear
exit
exit
clear
nvim
exit
d
pwd
cd Code
ls
cd ..
d
1
0
d
1
nvim
ls
cd Code
ls
cd cli-rust
ls
cd echo-rust
nvim
d
3
cd .config/nvim
ls
cd ../zsh
ls
ll
nvim .zshrc
git clone --depth 1 https://github.com/wbthomason/packer.nvim\\
 ~/.local/share/nvim/site/pack/packer/start/packer.nvim
nvim
nvim --noplugin
exit
sudo pacman -S zsh-completions
sudo pacman -S zsh-syntax-highlighting
sudo pacman -S fzf
sudo pacman -S ripgrep
nvim
echo $PATH
echo $PATH $PATH
cd .config
ls
cd nvim
ls
clear
d
d
ga
clear
nvim .
cd ../..
ls
cd Code
ls
cd source-code
ls
cd neovim
ls
git pull
ls
make
sudo make install
clear
nvim
nvim --noplugin
nvim --noplugin
nvim --noplugin
nvim
which nvim
nvim
ls
nvim
nvim
git clone --depth 1 https://github.com/wbthomason/packer.nvim\\
 ~/.local/share/nvim/site/pack/packer/start/packer.nvim\

cd .local/share/nvim/site/pack/packer/start
rm packer.nvim
ls
cd ../..
cd ..
ls
cd ..
ls
cd site/pack/packer
ls
cd start
ls
ll
ls -la
cd packer.nvim
ls
cd ..
ls
rm -rf packer.nvim
cd ~
git clone --depth 1 https://github.com/wbthomason/packer.nvim\\
 ~/.local/share/nvim/site/pack/packer/start/packer.nvim\

nvim
clear
nvim
clear
bash
cd .config/zsh
ls
nvim aliases
exit
hto
htop
brightnessctl -h
brightnessctl -l
brightnessctl s 100
brightnessctl s 100%
clear
d
clear
pwd
ls -la
nvim .zshenv
clear
source .zshrc
source .zshenv
d
clear
cd Code/cli-rust
ls
cd echo-rust
d
git status
sudo pacman -Syu
d
nvim .zshenv
nvim /etc/zsh/zprofile 
d
cd .config/zsh
clear
nvim .
nvim .config
nvim .
git config --global interactive.diffFilter "diff-so-fancy --patch"
yay -S nvim-packer-git
nvim
nvim
cd .config/nvim
ls
nvim lua/options.lua
cd ~/Code
ls
cd cli-rust
ls
cd echo-rust
ls
nvim .
ll
clear
d
nvim .zshenv
cd Code
ls
cd source-code/devdash
ls
builtin cd -- internal
cd ~
clear
clear
sudo pacman -S dunst libnotify
dunst&
notify-send "hello u" -u low
kill 18029
cd .config/i3
ls
nvim config
cd ~
clear
sudo pacman -S diff-so-fancy
clear
git config --global core.pager "diff-so-fancy | less --tabs=4 -RFX"
d
3
git diff
cd .
cd ..
cd ~/Code/dotfiles
git diff
cd ~
nvim .gitconfig
clear
cd Code
ls
cd cli-rust
ls
cd echo-rust
git diff
diff-so-fancy
diff-so-fancy | less -tabs=4 -RXF
git diff --color | diff-so-fancy
clear
git status
d
5
ll
cd command-line-rust
git diff
git status -v
git diff --HEAD
git diff HEAD
d
6
git status
cd ..
cd ~/.config
ls
cp i3 ~/Code/dotfiles
cp -r i3 ~/Code/dotfiles
d
2
ls
git status
ga .
gc -m 'i3 setup'
git status
git diff
git push
git push -f
git diff
git diff
git status
git pull
git status
git status
cd i3
ls
cd feh
ls
rm -rf _files
cd ..
ls
cd ..
ls
git status
ga .
git diff
gc -m 'remove _files from feh'
git diff
ls
nvim i3/config
git diff
clear
git diff
git status
ga .
gc -m 'aowiefj'
git diff
git push
clear
nvim
cd ~
d
4
cd nvim
ls
nvim .
ls
ls
cd ..
ls
cd i3
ls
cd feh
ls
ls
cd ..
ls
cd ..
ls
cd nvim
nvim .
ls
nvim .
ls
nvim .
nvim .
nvim .
nvim .
clear
cd ~
sudo pacman -S exa 
exa
exa -l
clear
d
2
cd zsh
ls
nvim .
clear
ll
ls -l
ps
d
zathura Books/Matthieu\ Cneude\ -\ Building\ your\ Mouseless\ Development\ Environment\ \(2021\).pdf&
du
sudp pacman -S tmux
sudo pacman -S tmux
clear
tmux
cd Books
ls
zathura Matthieu\ Cneude\ -\ Building\ your\ Mouseless\ Development\ Environment\ \(2021\).pdf
zathura Matthieu\ Cneude\ -\ Building\ your\ Mouseless\ Development\ Environment\ \(2021\).pdf &
cd ~
ls
mkdir Notes
cd Notes
ls
nvim todo.md
nvim todo.md
cd ..
ls
ll
while ;; do echo 'This will ever end except if you hit ctrl c'; sleep 1;
while ;; do echo 'This will ever end except if you hit ctrl c'; sleep 1; done
while :; do echo 'This will ever end except if you hit ctrl c'; sleep 1; done
ls
ll
cd .config
ls
ll
mkdir tmux
ls
cd tmux
ls
touch tmux.conf
nvim tmux.conf
tmux kill-server
cd .
cd ..
ls
cd zsh
ls
nvim .zshrc
cd ..
ls
cd nvim 
ls
nvim .
nvim .
cd ..
ls
rm -rf nvim/\~
ls
cd nvim
ll
git clone https://github.com/tmux-plugins/tpm $XDG_CONFIG_HOME/tmux/plugins/tpm
exit
htop
sudo pacman -Syu
d
cd .config/tmux
nvim tmux.conf
nvim tmux.conf
cd ~
sudo pacman -S lynx
clear
lynx https://en.wikipedia.org
lynx -vikeys -accept_all_cookies "https://lite.duckduckgo.com/lite/?q=archlinux"
ll
cd Books
ls
ll
zathura Matthieu\ Cneude\ -\ Building\ your\ Mouseless\ Development\ Environment\ \(2021\).pdf&
htop
ls
cd ~
ls
cd ~/\~
ls
ll
cd ..
ls
pwd
rm -rf ~/\~
ls
clear
d
cd Code
ls
cd cli-rust/echo-rust
nvim .
nvim .
clear
nvim .
nvim .
d
2
ls
curl --version
curl -s https://sh.rustup.rs | cat
sudo pacman -S bat
curl -s https://sh.rustup.rs | bat
clear
d
cd .config/zsh
nvim .
exit
tmux list-sessions
tmux attach-session -t 0
tmux
tmux list-sessions
tmux attach-session -t 0
tmux kill-session 0
tmux kill-session -t 0
tmux list-sessions
tmux
cd Notes
ls
nvim todo.md
d
cd ~/.config/nvim
nvim .
clear
nvim .
nvim .
ls
cat init.lua
htop
cd Books
zathura Matthieu\ Cneude\ -\ Building\ your\ Mouseless\ Development\ Environment\ \(2021\).pdf &
duckduckgo lion
clear
neofetch
tmux list-sessions
tmux -h
man tmux
exit
curl -s https://sh.rustup.rs | cat
ll
ls
ll
cd .config/zsh
ls
ll
nvim .zshrc
nvim scripts.sh
d
cd ~/Code
ls
cd Projects
ls
npx create-react-app test-react --template typescript
cd test-react
ls
nvim .
cd ..
ls
ls
rm -rf test-react
clear
cd ..
ls
cd cli-rust
ls
cd echo-rust
ls
nvim .
cargo run -- -n hello world
cargo test
nvim .
cargo test
nvim .
cargo test
git diff
clear
ga .
gc -m 'finished writing tests, this program seems to be done'
gp
sudo pacman -S openssh
sudo systemctl start sshd
sudo systemctl status sshd
sudo pacman -S mosh
ip a
mosh --version
cd ~
ls
ll
cd .config/tmux
ls
cat tmux.conf
clear
nvim tmux.conf
sudo pacman -S cmatrix
cmatrix
clear
cd Code/Projects/test-react
ls
cat package.json
npm start
clear
cd ..
d
cd .config/tmux
nvim tmux.conf
tmux ls
tmux kill-server -t 0
tmux kill-server -c 0
tmux kill-session -t 0
d
cd ../...
cd ..
cd ..
ls
cd ..
ls
cd Downloads
ls
mv duck-animate-1-500x500.png ~/Code/Projects/python-tui-email/duck.png
python3 send_email.py
ls
python3 send_email.py
python3 send_email.py
dd
d
cd ../..
ls
cd Code
ls
cd cli-rust
ls
cd echo-rust
nvim .
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 send_email.py
python3 receive_emails.py
tmux -ls
tmux ls
tmux attach-session -t 0
startx
tmux list-sessions
tmux attach-session 0
tmux attach-session -t 0
tmux kill-session 0
tmux kill-session -t 0
tmux
tmux kill-session 0
tmux kill-session -t 0
tmux ls
tmux
tmux kill-session -t 0
tmux
tmux
pip install pyright
pyright --version
clear
pip --version
pyright --version
pip uninstall pyright
sudo npm i -g pyright
sudo pacman -Syu
cd ..
ls
cd nvim
nvim .
nvim .
nvim .
cd ..
ls
nvim .
cd .config/tmux
ls
cd plugins
ls
cd tmux-copycat
cd ..
cd tpm
ls
cd ..
ls
cd ..
ls
nvim tmux.conf
cd ..
ls
cd nvim
ls
nvim .
nvim .
d
2
nvim tmux.conf
clear
cd ..
ls
cd ddon
cd dconf
ls
cat user
cd ..
ls
cd ~/.config/\~
ls
ls -la
cd ..
ls
rm -rf ~/.config/~
ls
cd tmux
ls
cd ..
ls
cd kitty
ls
ll
cd ~/.config/kitty/\~
cd ..
ls
cd ..
ls
cd nvim
ls
nvim .
nvim .
cd ~/Code
ls
cd P
cd Projects
ls
mkdir python-tui-email
cd python-tui-email
ls
python -m venv env
ls
ll
source env/bin/activate
nvim send_email.py
ls
cd env
ls
cd ..
ls
nvim .
nvim email_template.txt
nvim email_recipients.txt
python3 send_email.py
nvim .
nvim .
nvim receive_emails.py
pip3 install npyscreen
pip install -upgrade pip
pip install --upgrade pip
nvim email.tui
nvim email_tui.py
ll
nvim .
python3 email_tui.py
nvim .
clear
cd Books
ls
ll
zathura Ken\ Youens-Clark\ -\ Command-Line\ Rust_\ A\ Project-Based\ Primer\ for\ Writing\ Rust\ CLIs-O\'Reilly\ Media\ \(2022\).pdf&
tmux
tmux ls
tmux kill-session -t 1
tmux ls
nvim .
cd ~
sudo pacman -Syu
cd .config/zsh
ls
ll
nvim .
ls a
ip a
sudo systemctl status sshd
sudo systemctl start sshd
sudo systemctl enable sshd
tmux ls
htop
clear
ls
ll
cd Code/sandbox
ls
cd shell
ll
ls
ll
nvim chsh.sh
clear
nvim
clear
ll
emacs
clear
./chsh.sh
sudo chmod +x ./chsh.sh
./chsh.sh
nvim chsh.sh
clear
ll
./chsh.sh
nvim chsh.sh
clear
./chsh.sh
nvim chsh.sh
clear
./chsh.sh
exit
clear
cd Code/sand
cd Code/sandbox
ll
cd shell
lll
ll
rm chsh.sh~
ll
nvim chsh.sh
exit
htop
clear
neofetch
ll
tmux ll
tmux ls
tmux attach-session py
tmux attach-session python
tmux attach-session -t python
clear
sudo pacman -Syu
tmux ls
tmux new-session
ls
cd Code
ls
cd Projects
ls
cd python-tui-email
ls
nvim .
source env/bin/activate
nvim .
nvim .
nvim .
clear
clear
source env/bin/activate
python3 email_tui.py
python3 email_tui.py
clear
python3 email_tui.py
python3 email_tui.py
python3 email_tui.py
python3 email_tui.py
python3 email_tui.py
python3 email_tui.py
clear
python3 email_tui.py
python3 email_tui.py
clear
python3 email_tui.py
python3 email_tui.py
python3 email_tui.py
python3 email_tui.py
git init
clear
git remote add origin git@github.com:jacobbathan/python-email-tui.git
git branch -M main
nvim .gitignore
git status
git add .gitignore
git add email_tui.py receive_emails.py send_email.py
git commit -m 'init commit, first draft of this'
git push
gp --set-upstream origin main
python3 email_tui.py
clear
python3 email_tui.py
exit
tmux attach-session -t python
d
cd Code/sandbox
ll
cd shell
ll
./chsh.sh
./chsh.sh
./chsh.sh
nvim chsh.sh
./chsh.sh
./chsh.sh
nvim chsh.sh
./chsh.sh
./chsh.sh
./chsh.sh
./chsh.sh
./chsh.sh
nvim chsh.sh
./chsh.sh
./chsh.sh
nvim chsh.sh
./chsh.sh
nvim .
cd .config/zsh
ll
nvim aliases
tmux ls
tmux
tmux ls
tmux rename-session -t 0 python
tmux ls
 d
cd Code
ls
cd Projects
ls
cd ..
ls
cd sandbox
ls
mkdir shell
cd shell
ls
nvim chsh.sh
ip a
sudo pacman -S mosh
clear
ip a
  ls
clear
nvim .
touch .tmux-cht-languages .tmux-cht-commands
tmux
ll
./chsh.sh
nvim .tmux-cht-commands
./chsh.sh
./chsh.sh
./chsh.sh
exit
thop
htop
nvim .
tmux ls
tmux attach-session -t 2
tmux kill-session -a
tmux ls
tmux kill-session -t 2
tmux ls
cd Books
ls
zathura \(Addison-Wesley\ Professional\ Computing\)\ Alan\ A.\ A.\ Donovan,\ Brian\ W.\ Kernighan\ -\ The\ Go\ Programming\ Language-Addison-Wesley\ Professional\ \(2015\).pdf&
clear
ls
mkdir Go Rust Python Javascript
ls
ll
mkdir DataStructuresAlgorithms
ls
mv \(Addison-Wesley\ Professional\ Computing\)\ Alan\ A.\ A.\ Donovan,\ Brian\ W.\ Kernighan\ -\ The\ Go\ Programming\ Language-Addison-Wesley\ Professional\ \(2015\).pdf Go
mv Dr.\ Basant\ Agarwal\ -\ Hands-On\ Data\ Structures\ and\ Algorithms\ with\ Python_\ Store,\ manipulate,\ and\ access\ data\ effectively,\ 3rd\ Edition-Packt\ \(2022\).pdf Python
mv "Jay\ Wengrow\ -\ A\ Common-Sense\ Guide\ to\ Data\ Structures\ and\ Algorithms_\ Level\ Up\ Your\ Core\ Programming\ Skills-Pragmatic\ Bookshelf\ \(2020\).pdf" DataStructuresAlgorithms
mv Jay\ Wengrow\ -\ A\ Common-Sense\ Guide\ to\ Data\ Structures\ and\ Algorithms_\ Level\ Up\ Your\ Core\ Programming\ Skills-Pragmatic\ Bookshelf\ \(2020\).pdf DataStructuresAlgorithms
ll
mc Jim\ Blandy,\ Jason\ Orendorff\ -\ Programming\ Rust_\ Fast,\ Safe\ Systems\ Development-O\'Reilly\ Media\ \(2018\).epub Rust
mv Jim\ Blandy,\ Jason\ Orendorff\ -\ Programming\ Rust_\ Fast,\ Safe\ Systems\ Development-O\'Reilly\ Media\ \(2018\).epub Rust
ll
mv Ken\ Youens-Clark\ -\ Command-Line\ Rust_\ A\ Project-Based\ Primer\ for\ Writing\ Rust\ CLIs-O\'Reilly\ Media\ \(2022\).pdf Rust
ll
mv Luciano\ Ramalho\ -\ Fluent\ Python-O\'Reilly\ Media\ \(2015\).pdf Python
ll
ll
mkdir Misc
mv Matthieu\ Cneude\ -\ Building\ your\ Mouseless\ Development\ Environment\ \(2021\).pdf Misc
ll
mv Rick\ van\ Hattem\ -\ Mastering\ Python_\ Write\ powerful\ and\ efficient\ code\ using\ the\ full\ range\ of\ Python\'s\ capabilities,\ 2nd\ Edition-Packt\ \(2022\).pdf Python
ll
mv Steven\ F.\ Lott,\ Dusty\ Phillips\ -\ Python\ Object-Oriented\ Programming_\ Build\ robust\ and\ maintainable\ object-oriented\ Python\ applications\ and\ libraries-Packt\ Publishing\ \(2021\).pdf Python
ll
mv Thorsten\ Ball\ -\ Writing\ A\ Compiler\ In\ Go-Thorsten\ Ball\ \(2018\).epub Go
ll
mv Thorsten\ Ball\ -\ Writing\ an\ interpreter\ in\ Go\ \(2017\).pdf Go
ll
cd ..
ls
cd Notes
ls
nvim todo.md
cd Code/sandbox/shell/
./chsh.sh 
bash
cd ~/.config/zsh
cd ~/.config/zsh
ll
nvim aliases
ll
./chsh.sh
./chsh.sh
./chsh.sh
./chsh.sh
./chsh.sh
./chsh.sh
./chsh.sh
./chsh.sh
./chsh.sh
./chsh.sh
nvim chsh.sh
nvim chsh.sh
cd Code/sandbox/shell
tmux
tmux ls
tmux attach-session -t 0
tmux kill-session -t 0
cd Books
mkdir GraphQL
cd ..l
cd ..
ll
emacsclient -nt
emacsclient -nw
cd .config/zsh
ll
nvim aliases
tmux
newsboat
newsboat
newsboat
startx
cd ~
ls
cat .bashrc
clear
htop
clear
man emacsclient
cd Code/sandbox/shell
ll
nvim chsh.sh
emacs
emacs
clear
sudo pacman -Syu
sudo pacman -S newsboat
ls
nvim .config
clear
cd .config
mkdir newsboat
cd newsboat
ls
nvim urls
newsboat
nvim urls
clear
d
2
clear
ll
cd .config
ll
nvim picom
nvim nvim
sudo reboot
./chsh.sh
./chsh.sh
./chsh.sh
./chsh.sh
clear
./chsh.sh
man tmux | cat
man tmux | less
./chsh.sh
ll
ll
cd Notes
ll
cat todo.md
nvim
clear
tmux ls
cat .config/kitty/kitty.conf
fc-list | grep "Hack"
nvim .
nvim .
nvim ui/html/base.tmpl
ll
cd ui
ll
cd html
ll
mkdir pages
cp mv base.tmpl pages/
ll
mv base.tmpl pages
cp home.page.tmpl pages/home.tmpl
rm home.page.tmpl
cd ..
cd .
cd ..
ll
nvim .
emacs
emacs
emacs
clear
emacs
emacs
clear
emacs
ll
emacs
ll
cd .config/nvim
nvim .
ll
cd ..
ls
cd ~/Code
ll
cd Projects
ll
git clone git@github.com:jacobbathan/go-backend.git
cd go-backend
ll
go version
tmux
tmux ls
tmux kill-server -t 0
cd ~
d
1
git diff
clear
git status
git add .
git commit -m 'refactored templates'
git push
cd ..
ll
cd ..
ll
cd rust-the-book
ll
rustup docs --book
rustup --version
rustc version
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
d
5
ll
cd zsh
ll
nvim .zshrc
cd ..
ll
cd ..
ll
nvim .zshenv
sudo pacman -Syu
d
2
ll
nvim .
cp .emacs.d/init.el Code/dotfiles/emacs
cd Code/dotfiles
git status
git add .
git commit -m 'added org mode for emacs'
cd ..
man mv
cd ..
cd .config
ll
mv nvim ~/Code/dotfiles/
man cp
cp -f nvim ~/Code/dotfiles
cp -r -f nvim ~/Code/dotfiles
ll
d
3
git status
cd nvim
ll
rm -rf ~/Code/dotfiles/nvim/\~
rm -rf undo
cd ..
ls
ll
git status
git add .
git commit -m 'lots of nifty nvim changes, auto pairs, lualine, and python lsp. need to start working on adding dap.'
git push
git push -f
git pull
ll
rm README.txt
git status
git add README.txt
git add readme.org
git status
git commit -m 'txt to org'
git push
ll
d
3
cd Books
ll
cd Go
ll
cd ..
ll
cd GraphQL
ll
zathura Marc-Andre\ Giroux\ -\ Production\ Ready\ GraphQL\ \(2020\).pdf&
dd
clear
ll
cd ..
ll
cd Go
ll
zathura Alex\ Edwards\ -\ Let\'s\ Go-Alex\ Edwards\ \(2022\).pdf&
go run .
ll
go run cmd/web/*
go run cmd/web/*
go run cmd/web/*
go run ./cmd/web
go run ./cmd/web
curl -l -x POST https://localhost:4000/snippet/create
curl -l -x POST https://localhost:4000/snippet/create
curl -i -X POST https://localhost:4000/snippet/create
curl -i -X POST https://localhost:4000/snippet/create
nvim .
nvim .
nvim .
nvim .
ll
cd src
touch args.rg chunk.rs chunk_type.rs commands.rs png.rs
ll
ll
cd ..
ll
nvim .
clear
nvim .
cargo test
cargo test chunk_type
cargo test --help
cargo test tests
cargo test tests
cargo test tests
cargo test tests
cargo test tests
cargo test tests
pacman -Q
clear
cd .config/newsboat
nvim .
newsboat
startx
rustc --version
rustup docs --book
ll
go version
clear
ll
cd Code
ll
cd Projects
ll
cargo new --bin pngme
cd pngme
ll
nvim .
tmux ls
tmux kill-session -t 0
tmux
tmux kill-session -t 0
d
3
man brightnessctl
brightnessctl set 50%
ll
cd Code
ll
mkdir nextjs
ll
cd nextjs
cd ..
cd ..
sudo pacman -Syu hugo
sudo pacman -Syu
clear
cd Code
ll
cd Projects
ll
hugo version
ll
hugo new site blogv1
ll
cd blogv1
ll
git clone https://github.com/monkeyWzr/hugo-theme-cactus.git themes/cactus
nvim .
hugo new posts/first-post.md
hugo server -D
nvim .
git status
git init
git remote add origin git@github.com:jacobbathan/jacobbathan.github.io.git\
git branch -M main\
git push -u origin main
git remote add origin git@github.com:jacobbathan/jacobbathan.github.io.git
git status
ll
nvim .
nvim .gitignore
git status
ll
clear
ll
mkdir .github/workflows/gh-pages.yml
mkdir .github/workflows/
mkdir -p .github/workflows/
nvim .github/workflows/gh-pages.yml
nvim con
nvim config.toml
git status
git add .
git submodule add https://github.com/monkeyWzr/hugo-theme-cactus.git themes/cactus
git status
git add .
git commit -m 'init'
git push origin HEAD
rm -rf themes/cactus
git submodule add https://github.com/monkeyWzr/hugo-theme-cactus.git themes/cactus
ll
rm -rf themes
ll
git submodule add https://github.com/monkeyWzr/hugo-theme-cactus.git themes/cactus
git ls-files --stage themes/cactus\

git rm --cached themes/cactus
git submodule add https://github.com/monkeyWzr/hugo-theme-cactus.git themes/cactus
git status
ga .
gc -m 'submodules'
git push
git push --set-upstream origin main
hugo version
hugo server
rm .github
rm -rf .github
ll
git status
git add .
git commit -m 'remove gh actions'
git push
ll
hugo
ll
cd public
ll
cd ..
git status
nvim config.toml
git status
git add .
git commit -m 'modified config'
git push
ll
cd ..
ll
mkdir bullpen
ll
cd bullpen
ll
git remote add origin git@github.com:jacobbathan/bullpen.git\
git branch -M main
git init
git remote add origin git@github.com:jacobbathan/bullpen.git\
git branch -M main
git staut
git status
cd mkdir hades
mkdir hades 
ll
cd hades
ll
npm init -y
npm i typescript --save-dev
nvim tsconfig.json
npm i react react-dom --save\
npm i @types/react @types/react-dom --save-dev
ll
mkdir public
nvim public/index.html
cd ..
ll
cd hades
ll
mkdir src
cd src
ll
nvim index.tsx
nvim App.tsz
ll
nvim App.tsx
ll
ll
pwd
clear
mkdir components
mkdir components/HelloWorld
nvim components/HelloWorld/index.tsx
cd ..
npm i webpack webpack-cli webpack-dev-server ts-node @types/node @types/webpack @types/webpack-dev-server tsconfig-paths-webpack-plugin --save-dev
npm i ts-loader fork-ts-checker-webpack-plugin html-webpack-plugin --save-dev
nvim webpack.config.ts
nvim package.json
npm i eslint eslint-plugin-react eslint-plugin-react-hooks @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint-plugin-prettier eslint-config-prettier eslint-plugin-import --save-dev
nvim .eslint.json
nvim .eslintignore
npm rn start:dev
npm run start:dev
nvim webpack.config.ts
cd ..
ls
cd ..
ll
cd bullpen
ll
rm -rf hades
clear
d
7
sudo nvim /etc/systemd/logind.conf
sudo reboot
neofetch
sudo pacman -Syu
exit
